@model NotificationPortal.ViewModels.ApplicationVM

@{
    ViewBag.Title = "Add Application";
}


<h1 class="display-4 text-center pb-3">@ViewBag.Title</h1>

<ol class="breadcrumb bg-faded">
    <li class="breadcrumb-item"><a href="~/Dashboard/Index" class="link-color">Dashboard</a></li>
    <li class="breadcrumb-item"><a href="~/Application/Index" class="link-color">Applications</a></li>
    <li class="breadcrumb-item active">@ViewBag.Title</li>
</ol>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal offset-md-3 col-md-6 offset-md-3">
        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger offset-md-3 col-md-6 offset-md-3" })
        @if (TempData["ErrorMsg"] != null)
        {
            <p>@Html.Raw(TempData["ErrorMsg"])</p>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.ClientRefID, htmlAttributes: new { @class = "" })
            <div>
                @Html.DropDownListFor(m => m.ClientRefID, Model.ClientList, htmlAttributes: new { @class = "form-control", style = "display: none;" })
                @Html.ValidationMessageFor(model => model.ClientRefID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServerReferenceIDs, htmlAttributes: new { @class = "" })
            <div>
                @Html.ListBoxFor(m => m.ServerReferenceIDs, Model.ServerList, htmlAttributes: new { @class = "form-control", style = "display: none;" })
                @Html.ValidationMessageFor(model => model.ServerReferenceIDs, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationName, htmlAttributes: new { @class = "required" })
            @Html.EditorFor(model => model.ApplicationName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ApplicationName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "required" })
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.URL, htmlAttributes: new { @class = "required" })
            @Html.EditorFor(model => model.URL, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.URL, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StatusID, htmlAttributes: new { @class = "" })
            @Html.DropDownListFor(m => m.StatusID, Model.StatusList, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.StatusID, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <input type="submit" value="Create" class="btn btn-success" />
            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-danger" })
        </div>
    </div>
}

<script src="~/Scripts/Custom/application-multiselect.js" type="text/javascript"></script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}