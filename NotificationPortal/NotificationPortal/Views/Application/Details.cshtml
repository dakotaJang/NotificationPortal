@model NotificationPortal.ViewModels.ApplicationDetailVM

@{
    ViewBag.Title = "Application Details";
}

@{
    var className = Model.Status == "Offline" ? "badge badge-danger" : "badge badge-success";
}

<h1 class="text-center display-4 pb-3">@Model.ApplicationName <span class="@className">@Html.DisplayFor(modelItem => Model.Status)</span></h1>

<ol class="breadcrumb bg-faded">
    <li class="breadcrumb-item"><a href="~/Dashboard/Index" class="link-color">Dashboard</a></li>
    <li class="breadcrumb-item"><a href="~/Application/Index" class="link-color">Applications</a></li>
    <li class="breadcrumb-item active">@Html.DisplayFor(model => model.ApplicationName)</li>
</ol>

@if (TempData["SuccessMsg"] != null)
{
    <p class="alert alert-success">
        @Html.Raw(TempData["SuccessMsg"])
    </p>
}
<!-- Nav tabs -->
<ul class="nav nav-tabs" role="tablist">
    <li class="nav-item">
        <a class="nav-link active" data-toggle="tab" href="#Applications" role="tab">
            <span class="hidden-xs-down">
                Applications
            </span>
            <span class="hidden-sm-up">
                Apps
            </span>
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" data-toggle="tab" href="#Servers" role="tab">Servers</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" data-toggle="tab" href="#Users" role="tab">Users</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" data-toggle="tab" href="#Notifications" role="tab">Notifications</a>
    </li>
</ul>

<!-- Tab panes -->
<div class="tab-content">
    <div class="tab-pane active" id="Applications" role="tabpanel">
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.ApplicationName)
            </dt>

            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.ApplicationName)
            </dd>

            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Description)
            </dt>

            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Description)
            </dd>

            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.URL)
            </dt>

            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.URL)
            </dd>

            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Client)
            </dt>

            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Client)
            </dd>

            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Status)
            </dt>

            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Status)
            </dd>

        </dl>
    </div>
    <div class="tab-pane" id="Servers" role="tabpanel">
        <table class="table table-bordered">
            @{ var serverModel = Model.Servers.FirstOrDefault();}
            <thead>
                <tr class="bg-inverse text-white text-center">
                    <th class="text-center">
                        @Html.DisplayNameFor(model => serverModel.ServerName)
                    </th>
                    <th class="text-center">
                        @Html.DisplayNameFor(model => serverModel.ServerType)
                    </th>
                    <th class="text-center">
                        @Html.DisplayNameFor(model => serverModel.Status)
                    </th>
                    <th class="text-center">
                        @Html.DisplayNameFor(model => serverModel.Location)
                    </th>
                </tr>
            </thead>
            <tbody>
            @foreach (var item in Model.Servers)
            {
                var statusClass = item.Status.ToUpper() == NotificationPortal.Models.Key.STATUS_SERVER_OFFLINE.ToUpper() ? "badge badge-danger" : "badge badge-success";
                <tr class="clickable-row" id="@item.ReferenceID" data-href="/Server/Details/@item.ReferenceID">
                    <td data-title="@Html.DisplayNameFor(model => item.ServerName)" class="first-row">
                        @Html.DisplayFor(modelItem => item.ServerName)
                    </td>
                    <td data-title="@Html.DisplayNameFor(model => item.ServerType)">
                        @Html.DisplayFor(modelItem => item.ServerType)
                    </td>
                    <td data-title="@Html.DisplayNameFor(model => item.Status)" >
                        <span class="@statusClass ml-1">
                            @Html.DisplayFor(modelItem => item.Status)
                        </span>
                    </td>
                    <td data-title="@Html.DisplayNameFor(model => item.Location)">
                        @Html.DisplayFor(modelItem => item.Location)
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
    <div class="tab-pane" id="Users" role="tabpanel">
        <table class="table table-bordered">
            @{ var userModel = Model.Users.FirstOrDefault();}
            <thead>
                <tr class="bg-inverse text-white text-center">
                    <th>
                        @Html.DisplayNameFor(model => userModel.FirstName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => userModel.LastName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => userModel.Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => userModel.RoleName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => userModel.BusinessPhone)
                    </th>
                </tr>
            </thead>
            <tbody>
            @foreach (var item in Model.Users)
            {
                <tr class="clickable-row" id="@item.ReferenceID" data-href="/User/Details/@item.ReferenceID">
                    <td data-title="@Html.DisplayNameFor(model => item.FirstName)" class="first-row">
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td data-title="@Html.DisplayNameFor(model => item.LastName)">
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td data-title="@Html.DisplayNameFor(model => item.Email)">
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td data-title="@Html.DisplayNameFor(model => item.RoleName)">
                        @Html.DisplayFor(modelItem => item.RoleName)
                    </td>
                    <td data-title="@Html.DisplayNameFor(model => item.BusinessPhone)">
                        @Html.DisplayFor(modelItem => item.BusinessPhone)
                    </td>
                </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="tab-pane" id="Notifications" role="tabpanel">
        <table class="table table-bordered">
            @{ var notificationModel = Model.Notifications.FirstOrDefault();}
            <thead>
                <tr class="bg-inverse text-white text-center">
                    <th>
                        @Html.DisplayNameFor(model => notificationModel.IncidentNumber)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => notificationModel.Status)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => notificationModel.Description)
                    </th>
                </tr>
            </thead>
            <tbody>
            @foreach (var item in Model.Notifications)
            {
                var notificationStatus = "";
                if (item.Status.ToUpper() == NotificationPortal.Models.Key.STATUS_NOTIFICATION_CLOSED.ToUpper()) {
                    notificationStatus = "badge badge-closed";
                }
                if (item.Status.ToUpper() == NotificationPortal.Models.Key.STATUS_NOTIFICATION_OPEN.ToUpper())
                {
                    notificationStatus = "badge badge-open";
                }
                if (item.Status.ToUpper() == NotificationPortal.Models.Key.STATUS_NOTIFICATION_INVESTIGATING.ToUpper())
                {
                    notificationStatus = "badge badge-invest";
                }
                if (item.Status.ToUpper() == NotificationPortal.Models.Key.STATUS_NOTIFICATION_RESOLVED.ToUpper())
                {
                    notificationStatus = "badge badge-resolved";
                }
                <tr class="clickable-row" id="@item.IncidentNumber" data-href="/Notification/DetailsThread/@item.IncidentNumber">
                    <td data-title="@Html.DisplayNameFor(model => item.IncidentNumber)" class="first-row">
                        @Html.DisplayFor(modelItem => item.IncidentNumber)
                    </td>
                    <td data-title="@Html.DisplayNameFor(model => item.Status)" >
                        <span class="@notificationStatus ml-1">
                            @Html.DisplayFor(modelItem => item.Status)
                        </span>
                    </td>
                    <td data-title="@Html.DisplayNameFor(model => item.Description)">
                        @Html.Raw(item.Description)
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>

<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ReferenceID }, new { @class = "btn btn-success" })
    @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-danger" })
</p>