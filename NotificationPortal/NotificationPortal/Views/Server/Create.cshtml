@model NotificationPortal.ViewModels.ServerVM

@{
    ViewBag.Title = "Add Server";
}

<h1 class="display-4 text-center pb-3">@ViewBag.Title</h1>

<ol class="breadcrumb bg-faded">
    <li class="breadcrumb-item"><a href="~/Dashboard/Index" class="link-color">Home</a></li>
    <li class="breadcrumb-item"><a href="~/Server/Index" class="link-color">Servers</a></li>
    <li class="breadcrumb-item active">@ViewBag.Title</li>
</ol>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="offset-md-3 col-md-6 offset-md-3">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @{  if (TempData["ErrorMsg"] != null)
                {
                    <p class="alert alert-danger">@TempData["ErrorMsg"]</p>
                }
            }
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServerName, htmlAttributes: new { @class = "control-label offset-md-3 col-md-2 required" })
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.EditorFor(model => model.ServerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServerName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationReferenceIDs, htmlAttributes: new { @class = "control-label offset-md-3 col-md-2 required" })
            <div class="offset-md-3 col-md-6 offset-md-3">
                <i id="preloader" class="fa fa-spinner fa-spin" style="display: none;"></i>
                <div id="ApplicationList">
                    @Html.ListBoxFor(m => m.ApplicationReferenceIDs, Model.ApplicationList as SelectList, htmlAttributes: new { style = "display: none;" })
                    @Html.ValidationMessageFor(model => model.ApplicationReferenceIDs, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LocationID, htmlAttributes: new { @class = "control-label offset-md-3 col-md-2 required" })
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.DropDownListFor(m => m.LocationID, Model.LocationList, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StatusID, htmlAttributes: new { @class = "control-label offset-md-3 col-md-2 required" })
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.DropDownListFor(m => m.StatusID, Model.StatusList, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServerTypeID, htmlAttributes: new { @class = "control-label offset-md-3 col-md-2 required" })
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.DropDownListFor(m => m.ServerTypeID, Model.ServerTypeList, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label offset-md-3 col-md-2 required required" })
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="offset-md-3 col-md-6">
                <input type="submit" value="Create" class="btn btn-success" />
                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>
                }

<script src="~/Scripts/Custom/server-multiselect.js" type="text/javascript"></script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
