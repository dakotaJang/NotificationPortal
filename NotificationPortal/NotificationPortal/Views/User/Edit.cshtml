@model NotificationPortal.ViewModels.UserVM

@{
    ViewBag.Title = "Edit User";
}

<h1 class="text-center display-4 pb-3">@ViewBag.Title</h1>

<ol class="breadcrumb bg-faded">
    <li class="breadcrumb-item"><a href="~/Dashboard/Index" class="link-color">Home</a></li>
    <li class="breadcrumb-item"><a href="~/User/Index">User Management</a></li>
    <li class="breadcrumb-item active">@ViewBag.Title</li>
    <li class="breadcrumb-item active">@Html.DisplayFor(model => model.FirstName)</li>
</ol>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <div class="form-group">
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                @{  if (TempData["ErrorMsg"] != null)
                    {
                        <p class="alert alert-danger">@TempData["ErrorMsg"]</p>
                    }
                }
            </div>
        </div>

        @Html.HiddenFor(model => model.ReferenceID)
        
        <div class="form-group">
            @Html.LabelFor(model => model.ClientList, htmlAttributes: new {@class = "control-label offset-md-3 col-md-2"})
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.DropDownListFor(m => m.ClientID, ViewBag.ClientNames as SelectList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClientID, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new {@class = "control-label offset-md-3 col-md-2"})
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.EditorFor(model => model.FirstName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.FirstName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new {@class = "control-label offset-md-3 col-md-2"})
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.EditorFor(model => model.LastName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.LastName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BusinessTitle, htmlAttributes: new {@class = "control-label offset-md-3 col-md-2"})
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.EditorFor(model => model.BusinessTitle, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.BusinessTitle, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BusinessPhone, htmlAttributes: new {@class = "control-label offset-md-3 col-md-2"})
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.EditorFor(model => model.BusinessPhone, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.BusinessPhone, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MobilePhone, htmlAttributes: new {@class = "control-label offset-md-3 col-md-2"})
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.EditorFor(model => model.MobilePhone, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.MobilePhone, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HomePhone, htmlAttributes: new {@class = "control-label offset-md-3 col-md-2"})
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.EditorFor(model => model.HomePhone, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.HomePhone, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StatusList, htmlAttributes: new {@class = "control-label offset-md-3 col-md-2"})
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.DropDownListFor(m => m.StatusID, ViewBag.StatusNames as SelectList, htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.StatusID, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="offset-md-3 col-md-6">
                <input type="submit" value="Save" class="btn btn-success"/>
                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
