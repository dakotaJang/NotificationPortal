@model NotificationPortal.ViewModels.AddUserVM

@{
    ViewBag.Title = "Add User";
}

<h1 class="display-4 text-center pb-3">@ViewBag.Title</h1>

<ol class="breadcrumb bg-faded">
    <li class="breadcrumb-item"><a href="~/Dashboard/Index" class="link-color">Home</a></li>
    <li class="breadcrumb-item"><a href="~/User/Index">User Management</a></li>
    <li class="breadcrumb-item active">@ViewBag.Title</li>
</ol>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        <div class="form-group">
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @{  if (TempData["ErrorMsg"] != null)
                    {
                        <p class="alert alert-danger">@TempData["ErrorMsg"]</p>
                    }
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RolesList, htmlAttributes: new { @class = "control-label offset-md-3 col-md-2 required" })
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.DropDownListFor(m => m.RoleName, Model.RolesList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RolesList, "", new { @class = "text-danger float-right" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClientList, htmlAttributes: new {@class = "control-label offset-md-3 col-md-2 required"})
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.DropDownListFor(m => m.ClientReferenceID, Model.ClientList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClientReferenceID, "", new {@class = "text-danger float-right" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationReferenceIDs, htmlAttributes: new { @class = "control-label offset-md-3 col-md-2 required" })
            <div class="offset-md-3 col-md-6 offset-md-3">
                <select class="form-control valid" id="ApplicationReferenceIDs" name="ApplicationReferenceIDs" multiple="multiple" aria-invalid="false">
                    @foreach (var item in Model.ApplicationList)
                    {
                        <option value="@Html.DisplayFor(modelItem => item.ReferenceID)" class="ApplicationListItem @Html.DisplayFor(modelItem => item.ClientReferenceID)">@Html.DisplayFor(modelItem => item.ApplicationName)</option>

                    }
                </select>
                @Html.ValidationMessageFor(model => model.ApplicationReferenceIDs, "", new { @class = "text-danger float-right" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new {@class = "control-label offset-md-3 col-md-2 required" })
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger float-right" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new {@class = "control-label offset-md-3 col-md-2 required" })
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.EditorFor(model => model.FirstName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.FirstName, "", new {@class = "text-danger float-right" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new {@class = "control-label offset-md-3 col-md-2 required" })
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.EditorFor(model => model.LastName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.LastName, "", new {@class = "text-danger float-right" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BusinessTitle, htmlAttributes: new {@class = "control-label offset-md-3 col-md-2" })
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.EditorFor(model => model.BusinessTitle, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.BusinessTitle, "", new {@class = "text-danger float-right" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.StatusList, htmlAttributes: new {@class = "control-label offset-md-3 col-md-2 required" })
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.DropDownListFor(m => m.StatusID, Model.StatusList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StatusID, "", new {@class = "text-danger float-right" })
            </div>
        </div>

        <div class="form-group">
            <div class="offset-md-3 col-md-6">
                <input type="submit" value="Add" class="btn btn-mint text-white"/>
                @Html.ActionLink("Cancel", "Index", null, new {@class = "btn btn-danger"})
            </div>
        </div>
    </div>
}

<script>
    $(document).ready(function () {
        $(".ApplicationListItem").hide();
        $("." + $("#ClientReferenceID").val()).show();
        $("#ClientReferenceID").change(function() {
            var clientRefIDs = $(this).val();
            $(".ApplicationListItem").hide();
            $("." + clientRefIDs).show();
        });
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
