@model NotificationPortal.ViewModels.ProfileVM

@{
    ViewBag.Title = "Edit Profile";
}

<h1 class="display-4 text-center pb-3">@ViewBag.Title</h1>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.HiddenFor(model => model.ReferenceID)

        <div class="form-group">
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                @{  if (TempData["ErrorMsg"] != null)
                    {
                        <p class="alert alert-danger">@TempData["ErrorMsg"]</p>
                    }
                }
                @{  if (TempData["SuccessMsg"] != null)
                    {
                        <p class="alert alert-success">@TempData["SuccessMsg"]</p>
                    }
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label offset-md-3 col-md-2 required" })
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger float-right" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label offset-md-3 col-md-2 required" })
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger float-right" })
            </div>
        </div>

        <div class="form-group">
                
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label offset-md-3 col-md-6 required" })
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger float-right" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BusinessTitle, htmlAttributes: new { @class = "control-label offset-md-3 col-md-2" })
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.EditorFor(model => model.BusinessTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BusinessTitle, "", new { @class = "text-danger float-right" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BusinessPhone, htmlAttributes: new { @class = "control-label offset-md-3 col-md-2 required" })
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.EditorFor(model => model.BusinessPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BusinessPhone, "", new { @class = "text-danger float-right" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MobilePhone, htmlAttributes: new { @class = "control-label offset-md-3 col-md-2 required" })
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.EditorFor(model => model.MobilePhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MobilePhone, "", new { @class = "text-danger float-right" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HomePhone, htmlAttributes: new { @class = "control-label offset-md-3 col-md-2" })
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.EditorFor(model => model.HomePhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HomePhone, "", new { @class = "text-danger float-right" })
            </div>
        </div>

        <div class="form-group">
            <div class="offset-md-3 col-md-6">
                <input type="submit" value="Update" class="btn btn-success" />
                @Html.ActionLink("Back to Dashboard", "Index", "Dashboard", null, new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
