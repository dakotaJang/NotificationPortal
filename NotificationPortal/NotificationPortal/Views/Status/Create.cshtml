@model NotificationPortal.ViewModels.StatusVM

@{
    ViewBag.Title = "Create Status";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 class="display-4 text-center pb-3">@ViewBag.Title</h1>
<!-- ========================= breadcrumb ========================= -->
<ol class="breadcrumb bg-faded">
    <li class="breadcrumb-item"><a href="~/Dashboard/Index" class="link-color">Dashboard</a></li>
    <li class="breadcrumb-item"><a href="~/Status/Index">Status</a></li>
    <li class="breadcrumb-item active">@ViewBag.Title</li>
</ol>
<!-- ========================= create form for status ========================= -->
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal offset-md-3 col-md-6 offset-md-3">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (TempData["SuccessMsg"] != null)
        {
            <!-- display success message -->
            <p class="alert alert-success alert-dismissible fade show" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                @Html.Raw(TempData["SuccessMsg"])
            </p>
        }
        @if (TempData["ErrorMsg"] != null)
        {
            <!-- display error message -->
            <p class="alert alert-danger alert-dismissible fade show" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                @Html.Raw(TempData["ErrorMsg"])
            </p>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.StatusName, htmlAttributes: new { @class = "required" })
            @Html.EditorFor(model => model.StatusName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StatusName, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StatusTypeID, htmlAttributes: new { @class = "" })
            @Html.DropDownListFor(m => m.StatusTypeID, Model.StatusTypeList, htmlAttributes: new { @class = "form-control" })
        </div>
        <div class="form-group">
            <input type="submit" value="Add" class="btn btn-success" />
            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-danger" })
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}