@model IEnumerable<NotificationPortal.ViewModels.DashboardVM>

@{
    ViewBag.Title = "Dashboard";
}

<h1 class="display-4 text-center pb-3">@ViewBag.Title</h1>

<div class="row">
    <div class="col-md-2">
        <div class="btn-group" role="group">
            <button id="filter-btn" type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Filter
            </button>
            <div class="dropdown-menu" aria-labelledby="filter-btn">
                <a class="dropdown-item" href="#">Source</a>
                <a class="dropdown-item" href="#">Filter 1</a>
                <a class="dropdown-item" href="#">Filter 2</a>
            </div>
        </div>
    </div>
    <div class="offset-md-4 col-md-6">
        <div style="float: right">
            <form class="form-inline pb-3" method="get" action="~/Dashboard/Search">
                <input class="form-control mr-sm-2" type="text" placeholder="Search" name="name" />
                <input class="btn btn-secondary" type="submit" value="Search" />
            </form>
        </div>
    </div>
</div>
@if (HttpContext.Current.User.IsInRole(NotificationPortal.Models.Key.ROLE_USER) || HttpContext.Current.User.IsInRole(NotificationPortal.Models.Key.ROLE_CLIENT)) {
    @Html.Partial("~/Views/Dashboard/_external.cshtml", Model)
}
else {
    <table class="table table-bordered" style="position:relative;">
        <thead>
            <tr class="bg-inverse text-white text-center">
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.SourceName)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.LevelOfImpact)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.ThreadHeading)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.SentDateTime)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.Status)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                var statusClass = item.Status.ToUpper() == NotificationPortal.Models.Key.STATUS_NOTIFICATION_INCOMPLETE.ToUpper() ? "text-danger" : "text-success";
                var impactClass = item.LevelOfImpact.ToUpper() == NotificationPortal.Models.Key.LEVEL_OF_IMPACT_NON_IMPACTING.ToUpper() ? "badge badge-success" : "badge badge-danger";
                <tr class="text-centerclickable-row-dashboard" data-href="/Notification/Details/@item.ThreadID">
                    <td>
                        <a href="@Url.Action("Details", "Server", new { id = item.SourceReferenceID })" class="">
                            @Html.DisplayFor(modelItem => item.SourceName)
                        </a>
                    </td>
                    <td>
                        <span class="@impactClass">
                                @Html.DisplayFor(modelItem => item.LevelOfImpact)
                        </span>
                    </td>
                    <td>
                        <a href="@Url.Action("DetailsThread", "Notification", new { id = item.ThreadID })" class="">
                            @Html.DisplayFor(modelItem => item.ThreadHeading)
                        </a>
                    </td>
                    <td>
                        <span>
                            @Html.DisplayFor(modelItem => item.SentDateTime)
                        </span>
                    </td>
                    <td>
                        <span class="@statusClass">
                            @Html.DisplayFor(modelItem => item.Status)
                        </span>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
