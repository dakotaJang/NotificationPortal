@model IEnumerable<NotificationPortal.ViewModels.DashboardVM>
@using System.Text.RegularExpressions

@if (Model != null)
{
    if (Model.Count() > 0)
    {
        //loop to see all the notifications associated with this external user
        foreach (var item in Model)
        {
            var impactClass = "";

            switch (item.LevelOfImpact) {
                case NotificationPortal.Models.Key.LEVEL_OF_IMPACT_NON_IMPACTING:
                    impactClass = "badge badge-green";
                    break;
                case NotificationPortal.Models.Key.LEVEL_OF_IMPACT_IMPACTING:
                    impactClass = "badge badge-orange";
                    break;
                case NotificationPortal.Models.Key.LEVEL_OF_IMPACT_OUTAGE:
                    impactClass = "badge badge-red";
                    break;
                case NotificationPortal.Models.Key.LEVEL_OF_IMPACT_REDUNDANCY:
                    impactClass = "badge badge-yellow";
                    break;
                default:
                    impactClass = "badge badge-grey";
                    break;
            }
        <div class="card-deck pb-3">
            <div class="card">
                <a href="@Url.Action("DetailsThread", "Notification", new { id = item.ThreadID })">
                    <div class="card-header card-inverse card-deck">
                        <!-- notification heading -->
                        <div class="col-sm-9">
                            <h5>

                                @Html.DisplayFor(modelItem => item.ThreadHeading)
                            </h5>
                        </div>
                        <!-- notification level of impact -->
                        <div class="col-sm-3">
                            <span class="float-right external-status @impactClass">
                                @Html.DisplayFor(modelItem => item.LevelOfImpact)
                            </span>
                        </div>
                    </div>
                    <div class="card-block clickable-row-dashboard" data-href="/Notification/DetailsThread/@item.ThreadID">
                        <div class="col-md-12">
                            <!-- application name -->
                            <div class="row">
                                <h3 class="heading-padding text-coral">
                                    Application: @Html.DisplayFor(modelItem => item.AppName)
                                </h3>
                            </div>
                            <!-- notification thread details -->
                            <div class="col-md-12">
                                <div class="row">
                                    <div class="col-md-12">
                                        <ul>
                                            @{
                                                // loop for all the notifictions belonging to this thread
                                                var listItemNum = 0;
                                                foreach (var detail in item.ThreadDetail)
                                                {
                                                    listItemNum++;
                                                    var padding = listItemNum * 10 + "px";
                                                    <li class="notification-list">
                                                        <p class="text-muted">
                                                            <i class="fa fa-sticky-note-o" aria-hidden="true"></i>
                                                            <!-- notification description -->
                                                            <span class="text-indent truncate">
                                                                @Html.DisplayFor(modelItem => detail.NotificationDetail)
                                                            </span>
                                                            <!-- notification issue time -->
                                                            <span class="float-right">
                                                                @Html.DisplayFor(modelItem => detail.SentDateTime)
                                                            </span>
                                                        </p>
                                                    </li>
                                                }
                                            }
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
        </div>
        }
    }
    else
    {
        <p>Currently, there are not notifications.</p>
    }
}
else
{
    <p>Currently, there are not notifications.</p>
}