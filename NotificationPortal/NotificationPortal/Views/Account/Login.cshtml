@using NotificationPortal.Models

@model LoginViewModel

@{
    ViewBag.Title = "Log In";
}

<div class="">
    <h1 class="display-4 pl-3 text-center pb-3">@ViewBag.Title</h1>

    <div class="alert alert-warning alert-dismissible fade show offset-md-4 col-md-4" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>

        <strong class="mb-1">Internal</strong>
        <ul>
            <li>
                admin@portal.com | password
            </li>
            <li>
                staff@portal.com | password
            </li>
        </ul>
        <hr />
        <strong>External</strong>
        <ul>
            <li>
                client@portal.com | password
            </li>
            <li>
                user@portal.com | password
            </li>
        </ul>
    </div>

    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()

        <div class="offset-md-4 col-md-4 offset-md-4">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @{  if (TempData["SuccessMsg"] != null)
                {
                    <p class="alert alert-success">@TempData["SuccessMsg"]</p>
                }
            }
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "control-label offset-md-4 col-md-2" })
            <div class="offset-md-4 col-md-4 offset-md-4">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "control-label offset-md-4 col-md-2" })
            <div class="offset-md-4 col-md-4 offset-md-4">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="offset-md-4 col-md-2">
                <div class="checkbox">
                    @Html.CheckBoxFor(m => m.RememberMe)
                    @Html.LabelFor(m => m.RememberMe)
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="offset-md-4 col-md-4">
                <input type="submit" value="Log in" class="btn btn-primary btn-block" />
            </div>
        </div>

        <div class="form-group">
            <div class="offset-md-4 col-md-4">
                @*<p>
                        @Html.ActionLink("Register as a new user", "Register", null, new { @class = "link-color" })
                    </p>*@

                @*Enable this once you have account confirmation enabled for password reset functionality*@
                <p>
                    @Html.ActionLink("Forgot your password?", "ForgotPassword", null, new { @class = "link-color" })
                </p>
            </div>
        </div>
    }
</div>
@*<section id="socialLoginForm">
        @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
    </section>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}