@model NotificationPortal.ViewModels.NotificationCreateVM

@{
    ViewBag.Title = "Start New Thread";
}

<h1 class="display-4 text-center pb-3">@ViewBag.Title</h1>

<ol class="breadcrumb bg-faded">
    <li class="breadcrumb-item"><a href="~/Dashboard/Index" class="link-color">Dashboard</a></li>
    <li class="breadcrumb-item"><a href="~/Notification/Index" class="link-color">Notifications</a></li>
    <li class="breadcrumb-item active">New Thread</li>
</ol>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @if (TempData["SuccessMsg"] != null)
        {
            <!-- display success message -->
            <p class="alert alert-success alert-dismissible fade show" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                @Html.Raw(TempData["SuccessMsg"])
            </p>
        }
        @if (TempData["ErrorMsg"] != null)
        {
            <!-- display error message -->
            <p class="alert alert-danger alert-dismissible fade show" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                @Html.Raw(TempData["ErrorMsg"])
            </p>
        }
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!--notification server reference ID-->
        <div class="form-group">
            @Html.LabelFor(model => model.ServerReferenceIDs, htmlAttributes: new { @class = "control-label required" })
            <div class="">
                @Html.ListBoxFor(m => m.ServerReferenceIDs, Model.ServerList, htmlAttributes: new { @id = "ServerList", style = "display: none;" })
                @Html.ValidationMessageFor(model => model.ServerReferenceIDs, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--notification application reference ID-->
        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationReferenceIDs, htmlAttributes: new { @class = "control-label" })
            <i id="preloader" class="fa fa-spinner fa-spin" style="display: none;"></i>
            <div id="ApplicationList">
                @Html.ListBoxFor(m => m.ApplicationReferenceIDs, Model.ApplicationList, htmlAttributes: new { style = "display: none;" })
                @Html.ValidationMessageFor(model => model.ApplicationReferenceIDs, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <!--notification type-->
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.NotificationTypeList, htmlAttributes: new { @class = "control-label required" })
                <div class="">
                    @Html.DropDownListFor(m => m.NotificationTypeID, Model.NotificationTypeList, "", htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <!--level of impact-->
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.LevelOfImpactList, htmlAttributes: new { @class = "control-label required" })
                <div class="">
                    @Html.DropDownListFor(m => m.LevelOfImpactID, Model.LevelOfImpactList, "", htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <!--notification status-->
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.StatusList, htmlAttributes: new { @class = "control-label required" })
                <div class="">
                    @Html.DropDownListFor(m => m.StatusID, Model.StatusList, "", htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <!--priority list-->
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.PriorityList, htmlAttributes: new { @class = "control-label required" })
                <div class="">
                    @Html.DropDownListFor(m => m.PriorityID, Model.PriorityList, "", htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
        </div>
        <!--heading-->
        <div class="form-group">
            @Html.LabelFor(model => model.NotificationHeading, htmlAttributes: new { @class = "control-label required" })
            <div class="">
                @Html.EditorFor(model => model.NotificationHeading, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NotificationHeading, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--description-->
        <div class="form-group">
            @Html.LabelFor(model => model.NotificationDescription, htmlAttributes: new { @class = "control-label required" })
            <div class="">
                @Html.TextAreaFor(model => model.NotificationDescription, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NotificationDescription, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--start time-->
        <div class="form-group">
            @Html.LabelFor(model => model.StartDateTime, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.StartDateTime, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
                @Html.ValidationMessageFor(model => model.StartDateTime, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--end time-->
        <div class="form-group">
            @Html.LabelFor(model => model.EndDateTime, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.EndDateTime, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
                @Html.ValidationMessageFor(model => model.EndDateTime, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--submit-->
        <div class="form-group">
            <div class="">
                <input type="submit" value="Create Thread" class="btn btn-mint text-white" />
                @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>
}

<script src="~/Scripts/Custom/notification-refresh-dropdown.js" type="text/javascript"></script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval",
                "~/bundles/summernote",
                "~/Scripts/add-notification.js")
}
