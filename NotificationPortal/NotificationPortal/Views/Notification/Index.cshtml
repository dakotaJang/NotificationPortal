@model NotificationPortal.ViewModels.NotificationIndexVM
@using PagedList.Mvc;

@{
    ViewBag.Title = "Notifications";
}

<h1 class="display-4 text-center pb-3">@ViewBag.Title</h1>

<ol class="breadcrumb bg-faded">
    <li class="breadcrumb-item"><a href="~/Dashboard/Index" class="link-color">Dashboard</a></li>
    <li class="breadcrumb-item active">Notifications</li>
</ol>

<div class="row">
    <div class="col-md-6">
        @using (Html.BeginForm("Index", "Notification", FormMethod.Get, new { @class = "form-inline pb-3" }))
        {
            @Html.TextBox("SearchString", Model.CurrentFilter, new { @class = "form-control mr-sm-2" })
            <input class="btn btn-secondary" type="submit" value="Search" />
        }
    </div>

    @if (User.IsInRole(NotificationPortal.Models.Key.ROLE_ADMIN) ||
        User.IsInRole(NotificationPortal.Models.Key.ROLE_STAFF))
    {
        <div class="offset-md-4 col-md-2">
            <div style="float: right">
                <p>
                    @Html.ActionLink("Create New", "CreateThread", null, new { @class = "btn btn-mint text-white" })
                </p>
            </div>
        </div>
    }
</div>

<table class="table table-bordered">
    <thead>
        <tr class="bg-inverse text-white text-center">
            <th class="text-center">
                @Html.ActionLink(Html.DisplayNameFor(model => Model.NotificationType).ToString(), "Index",
            new { sortOrder = Model.NotificationTypeSort, currentFilter = Model.CurrentFilter })
            </th>
            <th class="text-center">
                @Html.ActionLink(Html.DisplayNameFor(model => Model.LevelOfImpact).ToString(), "Index",
            new { sortOrder = Model.LevelOfImpactSort, currentFilter = Model.CurrentFilter })
            </th>
            <th class="text-center">
                @Html.ActionLink(Html.DisplayNameFor(model => Model.NotificationHeading).ToString(), "Index",
            new { sortOrder = Model.NotificationHeadingSort, currentFilter = Model.CurrentFilter })
            </th>
            <th class="text-center">
                @Html.ActionLink(Html.DisplayNameFor(model => Model.Status).ToString(), "Index",
            new { sortOrder = Model.StatusSort, currentFilter = Model.CurrentFilter })
            </th>
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model.Threads)
        {
            <tr class="text-center clickable-row" id="@item.IncidentNumber" data-href="/DetailsThread/@item.IncidentNumber">
                <td>
                    @Html.DisplayFor(modelItem => item.NotificationType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LevelOfImpact)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NotificationHeading)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
            </tr>
        }
    </tbody>

</table>
@Html.PagedListPager(Model.Threads, page => Url.Action("Index",
        new { page, sortOrder = Model.CurrentSort, currentFilter = Model.CurrentFilter }))

<div class="hidden-menu">
    <ul>
        <li><a href="/Create/" class="btn btn-sm">Update</a></li>
        <li><a href="/DeleteThread/" class="btn btn-sm">Delete</a></li>
    </ul>
</div>
