@model NotificationPortal.ViewModels.NotificationEditVM

@{
    ViewBag.Title = "Edit Notification";
}

<h1 class="display-4 text-center pb-3">@ViewBag.Title</h1>

<ol class="breadcrumb bg-faded">
    <li class="breadcrumb-item"><a href="~/Dashboard/Index" class="link-color">Dashboard</a></li>
    <li class="breadcrumb-item"><a href="~/Notification/Index" class="link-color">Notifications</a></li>
    <li class="breadcrumb-item active">Add Notification</li>
</ol>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @if (TempData["ErrorMsg"] != null)
        {
            <p class="alert alert-danger offset-md-3 col-md-6 offset-md-3">
                @Html.Raw(TempData["ErrorMsg"])
            </p>
        }
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ThreadID)
        @Html.HiddenFor(model => model.NotificationReferenceID)
        <!--notification server reference ID-->
        <div class="form-group">
            @Html.LabelFor(model => model.ServerReferenceIDs, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12">
                @Html.ListBoxFor(m => m.ServerReferenceIDs, Model.ServerList, htmlAttributes: new { @id = "ServerList", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ServerReferenceIDs, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--notification application reference ID-->
        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationReferenceIDs, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12">
                <select class="form-control valid" id="ApplicationReferenceIDs" name="ApplicationReferenceIDs" multiple="multiple" aria-invalid="false">
                    @foreach (var item in Model.ApplicationList)
                    {
                        <option value="@Html.DisplayFor(modelItem => item.ReferenceID)" class="ApplicationListItem @Html.DisplayFor(modelItem => item.ServerReferenceIDs)">@Html.DisplayFor(modelItem => item.ApplicationName)</option>
                    }
                </select>
                @* @Html.ListBoxFor(m => m.ApplicationReferenceIDs, Model.ApplicationList, htmlAttributes: new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.ApplicationReferenceIDs, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <!--notification type-->
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.NotificationTypeList, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-12">
                    @Html.DropDownListFor(m => m.NotificationTypeID, Model.NotificationTypeList, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <!--level of impact-->
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.LevelOfImpactList, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-12">
                    @Html.DropDownListFor(m => m.LevelOfImpactID, Model.LevelOfImpactList, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <!--notification status-->
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.StatusList, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-12">
                    @Html.DropDownListFor(m => m.StatusID, Model.StatusList, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <!--send method-->
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.SendMethodList, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-12">
                    @Html.DropDownListFor(m => m.SentMethodID, Model.SendMethodList, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <!--priority list-->
            <div class="form-group col-md-3">
                <label for="group_name" class="control-label">Priority</label>
                <div class="">
                    <select class="form-control" required>
                        <option>Normal</option>
                        <option>High</option>
                        <option>Low</option>
                    </select>
                </div>
            </div>
        </div>
        <!--heading-->
        <div class="form-group">
            @Html.LabelFor(model => model.NotificationHeading, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NotificationHeading, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NotificationHeading, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--description-->
        <div class="form-group">
            @Html.LabelFor(model => model.NotificationDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.NotificationDescription, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NotificationDescription, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--start time-->
        <div class="form-group">
            @Html.LabelFor(model => model.StartDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDateTime, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
                @Html.ValidationMessageFor(model => model.StartDateTime, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--end time-->
        <div class="form-group">
            @Html.LabelFor(model => model.EndDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDateTime, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
                @Html.ValidationMessageFor(model => model.EndDateTime, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit Notification" class="btn btn-warning" />
                @Html.ActionLink("Back", "DetailsThread", new { id = Model.ThreadID }, new { @class = "btn btn-danger" })

            </div>
        </div>
    </div>
}

<script>
    $(document).ready(function () {
        $("#ServerList").change(function () {
            var serverRefIDs = $(this).val();
            $(".ApplicationListItem").hide();
            $.each(serverRefIDs, function (index, value) {
                $("." + value).show();
            });
        });
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval",
                    "~/bundles/summernote",
                    "~/Scripts/add-notification.js")
}
