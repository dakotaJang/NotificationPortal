@model NotificationPortal.ViewModels.NotificationCreateVM

@{
    ViewBag.Title = "Update Notification";
}

<h1 class="display-4 text-center pb-3">@ViewBag.Title</h1>

<ol class="breadcrumb bg-faded">
    <li class="breadcrumb-item"><a href="~/Dashboard/Index" class="link-color">Dashboard</a></li>
    <li class="breadcrumb-item"><a href="~/Notification/Index" class="link-color">Notifications</a></li>
    <li class="breadcrumb-item active">Add Notification</li>
</ol>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ThreadID)

        <!--choose source-->
        <div class="form-group">
            <label for="group_name" class="control-label">Source Filter</label>
            <div class="">
                <select class="form-control" id="source" name="source" required>
                    <option value="Application" @if (Model.Source=="Application") { @Html.Raw("selected")}>Application</option>
                    <option value="Server" @if (Model.Source == "Server") { @Html.Raw("selected")}>Server</option>
                </select>
            </div>
        </div>

        <!--notification application ID-->
        <div class="form-group ApplicationList" @if (Model.Source != "Application") { @Html.Raw("style=\"display: none;\"")}>
            @Html.LabelFor(model => model.ApplicationID, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12">
                @Html.DropDownListFor(m => m.ApplicationID, Model.ApplicationList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ApplicationID, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--notification server ID-->
        <div class="form-group ServerList" @if (Model.Source != "Server") { @Html.Raw("style=\"display: none;\"")}>
            @Html.LabelFor(model => model.ServerID, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12">
                @Html.DropDownListFor(m => m.ServerID, Model.ServerList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ServerID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <!--notification type-->
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.NotificationTypeList, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-12">
                    @Html.DropDownListFor(m => m.NotificationTypeID, Model.NotificationTypeList, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <!--level of impact-->
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.LevelOfImpactList, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-12">
                    @Html.DropDownListFor(m => m.LevelOfImpactID, Model.LevelOfImpactList, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <!--notification status-->
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.StatusList, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-12">
                    @Html.DropDownListFor(m => m.StatusID, Model.StatusList, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <!--send method-->
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.SendMethodList, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-12">
                    @Html.DropDownListFor(m => m.SentMethodID, Model.SendMethodList, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <!--priority list-->
            <div class="form-group col-md-3">
                <label for="group_name" class="control-label">Priority</label>
                <div class="">
                    <select class="form-control" required>
                        <option>Normal</option>
                        <option>High</option>
                        <option>Low</option>
                    </select>
                </div>
            </div>
        </div>
        <!--heading-->
        <div class="form-group">
            @Html.LabelFor(model => model.NotificationHeading, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NotificationHeading, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NotificationHeading, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--description-->
        <div class="form-group">
            @Html.LabelFor(model => model.NotificationDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.NotificationDescription,  new { @class = "form-control"} )
                @Html.ValidationMessageFor(model => model.NotificationDescription, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--start time-->
        <div class="form-group">
            @Html.LabelFor(model => model.StartDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDateTime, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
                @Html.ValidationMessageFor(model => model.StartDateTime, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--end time-->
        <div class="form-group">
            @Html.LabelFor(model => model.EndDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDateTime, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
                @Html.ValidationMessageFor(model => model.EndDateTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script>
    $(document).ready(function () {
        $("#source").change(function() {
            var el = $(this);
            if (el.val() == "Application") {
                $(".ServerList").hide();
                $(".ApplicationList").show();
            }
            else if (el.val() == "Server") {
                $(".ApplicationList").hide();
                $(".ServerList").show();
            }
        });
    });
</script>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval",
                    "~/bundles/summernote",
                    "~/Scripts/add-notification.js")
}
