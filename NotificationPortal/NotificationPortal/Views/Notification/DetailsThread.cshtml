@model NotificationPortal.ViewModels.ThreadDetailVM

@{
    ViewBag.Title = "Notification Details";
}

<h1 class="display-4 text-center pb-3">@Model.IncidentNumber - @Model.Subject</h1>

<ol class="breadcrumb bg-faded">
    <li class="breadcrumb-item"><a href="~/Dashboard/Index" class="link-color">Dashboard</a></li>
    <li class="breadcrumb-item"><a href="~/Notification/Index" class="link-color">Notifications</a></li>
    <li class="breadcrumb-item active">@Html.Raw(Model.IncidentNumber)</li>
</ol>

@if (TempData["SuccessMsg"] != null)
{
    <!-- display success message -->
    <p class="alert alert-success">
        @Html.Raw(TempData["SuccessMsg"])
    </p>
}
@if (TempData["ErrorMsg"] != null)
{
    <!-- display error message -->
    <p class="alert alert-danger">
        @Html.Raw(TempData["ErrorMsg"])
    </p>
}

<!-- Nav tabs -->
<ul class="nav nav-tabs flex-xs-row" role="tablist">
    <li class="nav-item">
        <a class="nav-link flex-xs-fill text-sm-center active" data-toggle="tab" href="#Notifications" role="tab">Notifications</a>
    </li>
    <li class="nav-item">
        <a class="nav-link flex-xs-fill text-sm-center" data-toggle="tab" href="#Servers" role="tab">Servers</a>
    </li>
    <li class="nav-item">
        <a class="nav-link flex-xs-fill text-sm-center" data-toggle="tab" href="#Applications" role="tab">Applications</a>
    </li>
</ul>

<!-- Tab panes -->
<div class="tab-content">
    <!-- Notifications Tab pane -->
    <div class="tab-pane active" id="Notifications" role="tabpanel">
    <h4>@Html.DisplayFor(model => model.Subject)</h4>
    <dl class="row">
        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.IncidentNumber)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.IncidentNumber)</dd>
        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.NotificationType)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.NotificationType)</dd>

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.LevelOfImpact)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.LevelOfImpact)</dd>

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Status)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Status)</dd>
        @if (User.IsInRole(NotificationPortal.Models.Key.ROLE_ADMIN) || User.IsInRole(NotificationPortal.Models.Key.ROLE_STAFF))
        {
            <dt class="col-sm-2">@Html.DisplayNameFor(model => model.SenderName)</dt>
                    <dd class="col-sm-10">@Html.DisplayFor(model => model.SenderName)</dd>
        }

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.StartDateTime)</dt>
        <dd class="col-sm-10">
            @if (Model.StartDateTime != null)
            {
                @Html.DisplayFor(model => model.StartDateTime)
            }
            else
            {
                @Html.Raw("TBA")
            }
        </dd>

        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.EndDateTime)</dt>
        <dd class="col-sm-10">
            @if (Model.EndDateTime != null)
            {

                @Html.DisplayFor(model => model.EndDateTime)
            }
            else
            {
                @Html.Raw("TBA")
            }
        </dd>
    </dl>
    <hr />
    <!-- list of threads-->
    <div class="row">
        @foreach (var item in Model.Thread)
        {
            var statusClass = item.Status.ToUpper() == NotificationPortal.Models.Key.STATUS_NOTIFICATION_CLOSED.ToUpper() ? "badge badge-success" : "badge badge-danger";
            <div class="col-sm-12 single-thread">
                <span class="float-left">
                    @Html.Raw(item.NotificationDescription)
                </span>
                <span class="float-right">
                    @if (User.IsInRole(NotificationPortal.Models.Key.ROLE_ADMIN) ||
                         User.IsInRole(NotificationPortal.Models.Key.ROLE_STAFF))
                    {
                        <a class="" href="@Url.Action("Edit", "Notification", new { id = @item.ReferenceID })">
                            <i class="fa fa-pencil-square-o" aria-hidden="true"></i>
                        </a>
                    }
                    @if (User.IsInRole(NotificationPortal.Models.Key.ROLE_ADMIN))
                    {
                        <a class="" href="@Url.Action("Delete", "Notification", new { id = @item.ReferenceID })">
                            <i class="fa fa-trash" aria-hidden="true"></i>
                        </a>
                    }
                    @Html.Raw(item.SentDateTime)
                    <span class="@statusClass">@Html.Raw(item.Status)</span>
                </span>
            </div>
        }
     </div>
        </div>
    <!-- Servers Tab pane -->
    <div class="tab-pane" id="Servers" role="tabpanel">
        <table class="table table-bordered">
            @{ var serverModel = Model.Servers.FirstOrDefault();}
            <thead>
            <tr class="bg-inverse text-white text-center">
                <th class="text-center">
                    @Html.DisplayNameFor(model => serverModel.ServerName)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => serverModel.ServerType)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => serverModel.ServerStatus)
                </th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in Model.Servers)
            {
                <tr class="text-center clickable-row" id="@item.ReferenceID" data-href="Server/Details/@item.ReferenceID">
                    <td data-title="@Html.DisplayNameFor(model => serverModel.ServerName)" class="first-row">
                        @Html.DisplayFor(modelItem => item.ServerName)
                    </td>
                    <td data-title="@Html.DisplayNameFor(model => serverModel.ServerType)">
                        @Html.DisplayFor(modelItem => item.ServerType)
                    </td>
                    <td data-title="@Html.DisplayNameFor(model => serverModel.ServerStatus)">
                        @Html.DisplayFor(modelItem => item.ServerStatus)
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
    <!-- Applications Tab pane -->
    <div class="tab-pane" id="Applications" role="tabpanel">
        @if (Model.Applications.Count() == 0)
        {
            <p>There are no applications associated with this thread.</p>
        }
        else
        {
            var applicationModel = Model.Applications.FirstOrDefault();
            <table class="table table-bordered">
                <thead>
                <tr class="bg-inverse text-white text-center">
                    <th class="text-center">
                        @Html.DisplayNameFor(model => applicationModel.ApplicationName)
                    </th>
                    <th class="text-center">
                        @Html.DisplayNameFor(model => applicationModel.ApplicationURL)
                    </th>
                    <th class="text-center">
                        @Html.DisplayNameFor(model => applicationModel.ApplicationStatus)
                    </th>
                </tr>
                </thead>
                <tbody>
                @foreach (var item in Model.Applications)
                {
                    <tr class="text-center clickable-row" id="@item.ReferenceID" data-href="Application/Details/@item.ReferenceID">
                        <td data-title="@Html.DisplayNameFor(model => applicationModel.ApplicationName)" class="first-row">
                            @Html.DisplayFor(modelItem => item.ApplicationName)
                        </td>
                        <td data-title="@Html.DisplayNameFor(model => applicationModel.ApplicationURL)">
                            @Html.DisplayFor(modelItem => item.ApplicationURL)
                        </td>
                        <td data-title="@Html.DisplayNameFor(model => applicationModel.ApplicationStatus)">
                            @Html.DisplayFor(modelItem => item.ApplicationStatus)
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        }
    </div>
</div>

<div>
    @if(User.IsInRole(NotificationPortal.Models.Key.ROLE_ADMIN)||
        User.IsInRole(NotificationPortal.Models.Key.ROLE_STAFF))
    {
        <!-- Create is only for internal users -->
        @Html.ActionLink("Update Thread", "Create", new { id = Model.IncidentNumber }, new { @class = "btn btn-mint text-white" })
    }
    @if (User.IsInRole(NotificationPortal.Models.Key.ROLE_ADMIN))
    {
        <!-- Only admin can delete threads -->
        @Html.ActionLink("Delete Thread", "DeleteThread", new { id = Model.IncidentNumber }, new { @class = "btn btn-danger" })
    }
</div>

<script src="~/Scripts/jquery-3.1.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

