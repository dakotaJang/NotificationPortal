@model NotificationPortal.ViewModels.ClientVM

@{
    ViewBag.Title = "Edit Client";
}

<h1 class="text-center display-4 pb-3">@ViewBag.Title - @Html.DisplayFor(model => model.ClientName)</h1>

<ol class="breadcrumb bg-faded">
    <li class="breadcrumb-item"><a href="~/Dashboard/Index" class="link-color">Dashboard</a></li>
    <li class="breadcrumb-item"><a href="~/Client/Index" class="link-color">Clients</a></li>
    <li class="breadcrumb-item active">@Html.DisplayFor(model => model.ClientName)</li>
</ol>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (TempData["ErrorMsg"] != null)
        {
            <p class="alert alert-danger offset-md-3 col-md-6 offset-md-3">
                @Html.Raw(TempData["ErrorMsg"])
            </p>
        }
        @Html.HiddenFor(model => model.ReferenceID)

        <div class="form-group">
            @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label offset-md-3 col-md-2 required" })
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger float-right" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StatusList, htmlAttributes: new { @class = "control-label offset-md-3 col-md-2 required" })
            <div class="offset-md-3 col-md-6 offset-md-3">
                @Html.DropDownListFor(m => m.StatusID, ViewBag.StatusNames as SelectList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StatusID, "", new { @class = "text-danger float-right" })
            </div>
        </div>

        <div class="form-group">
            <div class="offset-md-3 col-md-6">
                <input type="submit" value="Save" class="btn btn-mint text-white" />
                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
